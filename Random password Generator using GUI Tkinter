import random
import string
import tkinter as tk
from tkinter import messagebox

# Function to generate a password based on strength and length
def generate_password():
    # Get the selected strength (Low, Medium, Strong)
    strength = strength_var.get()
    
    # Get the desired password length
    characters_length = length_var.get()

    # Check if the password length is within the specified range (8-20)
    if 8 <= characters_length <= 15:
        # Generate the password based on strength and length
        password = generate_password_strong(characters_length, strength)

        # Clear any existing text in the password entry field
        password_entry.delete(0, 'end')
        
        # Insert the generated password into the entry field
        password_entry.insert(0, password)
    else:
        # Display an error message if the password length is outside the range
        messagebox.showerror(title='Error', message='Password length must be between 8 and 15 characters.')

# Function to generate a strong password with specified length
def generate_password_strong(characters_number, strength):
    if strength == "Low":
        # Use lowercase letters and digits
        chars = string.ascii_lowercase + string.digits
    elif strength == "Medium":
        # Use both lowercase and uppercase letters plus digits
        chars = string.ascii_letters + string.digits
    elif strength == "Strong":
        # Use letters, digits, and special characters
        chars = string.ascii_letters + string.digits + string.punctuation
    else:
        raise ValueError("Invalid strength choice. Please choose from 'low', 'medium', or 'strong'.")

    # Generate a password by randomly selecting characters from the specified set
    password = ''.join(random.choice(chars) for _ in range(characters_number))
    return password

# Function to copy the generated password to the clipboard
def copy_pass():
    # Get the generated password from the entry field
    password = password_entry.get()
    
    # Clear the clipboard
    root.clipboard_clear()
    
    # Copy the password to the clipboard
    root.clipboard_append(password)
    
    # Update the clipboard
    root.update()
    
    # Show a success message using a messagebox
    messagebox.showinfo(title='Success', message='Password Copied successfully')

# Create a tkinter window
root = tk.Tk()
root.config(bg="blue")  # Set the background color of the main window
root.geometry("500x400")  # Set the window dimensions
root.title('Password Generator')  # Set the window title

# Create the strength label
strength_label = tk.Label(text="Enter the strength for the password:")
strength_label.config(bg="black", fg="white", font=("Calibri", 12, "italic"))
strength_label.pack(pady=5)

# Create the strength option menu
strength_var = tk.StringVar(root)
strength_var.set("Low")
strength_option = tk.OptionMenu(root, strength_var, "Low", "Medium", "Strong")
strength_option.config(font=("Helvetica", 12))
strength_option.pack(pady=5)

# Create the length label
length_label = tk.Label(text="Enter the length of the password:")
length_label.config(bg="black", fg="white", font=("Helvetica", 12, "italic"))
length_label.pack(pady=5)

# Create the length entry field
length_var = tk.IntVar(root)
length_entry = tk.Entry(root, textvariable=length_var)
length_entry.config(font=("Helvetica", 12, "italic"))
length_entry.pack(pady=5)

# Create the generate button
generate_btn = tk.Button(root, text='Generate')
generate_btn.config(bd='5', fg="black", font=("Helvetica", 12, "italic"), command=generate_password)
generate_btn.pack(pady=5)

# Create the password entry field
password_entry = tk.Entry(root)
password_entry.config(font=("Helvetica", 12, "italic"))
password_entry.pack(pady=5)

# Create the copy button
copy_btn = tk.Button(root, text='Copy')
copy_btn.config(bd='5', fg="black", font=("Helvetica", 12, "italic"), command=copy_pass)
copy_btn.pack()

# Start the tkinter main loop
root.mainloop()
